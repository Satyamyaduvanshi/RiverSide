// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../../../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id           String        @id @default(uuid())
  email        String        @unique
  password     String
  firstName    String
  lastName     String
  avatarUrl    String?
  refreshToken String?
  isBanned     Boolean       @default(false)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  ownedStudios Studio[]      @relation("ownedStudios")
  participants Participant[]
}

model Studio {
  id           String        @id @default(uuid())
  title        String
  
  status       StudioStatus  @default(SCHEDULED)

  owner        User          @relation("ownedStudios", fields: [ownerId], references: [id])
  ownerId      String

  participants Participant[]

  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Participant {
  id       String          @id @default(uuid())
  role     ParticipantRole @default(GUEST)

  user     User            @relation(fields: [userId], references: [id])
  userId   String

  studio   Studio          @relation(fields: [studioId], references: [id])
  studioId String

  joinedAt DateTime        @default(now())
  leftAt   DateTime?

  @@unique([studioId, userId])
}

enum ParticipantRole {
  HOST
  GUEST
}

enum StudioStatus {
  ACTIVE
  ENDED
  SCHEDULED
}